{"version":3,"sources":["webpack:///./src/components/d3-spanish/views/Histogram.vue?dc05","webpack:///src/components/d3-spanish/views/Histogram.vue","webpack:///./src/components/d3-spanish/views/Histogram.vue?b9f1","webpack:///./src/components/d3-spanish/views/Histogram.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","staticRenderFns","component"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,wBAAwB,CAACF,EAAG,KAAK,CAACJ,EAAIO,GAAG,eAAeH,EAAG,MAAM,CAACE,YAAY,gBAAgBE,MAAM,CAAC,GAAK,sBAC5NC,EAAkB,G,YCOtB,GACE,KAAF,YACE,MAAF,CACI,MAAJ,OAEE,QAAF,WAEI,IAAJ,GAAM,IAAN,GAAM,MAAN,GAAM,OAAN,GAAM,KAAN,IACA,qBACA,qBAGA,2BAEA,+BACA,gCACA,iCACA,YACA,iBACA,mCAGI,EAAJ,mHAEM,IAAN,WACA,gBACA,aACM,EAAN,YACA,uCACA,gBAGM,IAAN,WACA,mBAAQ,OAAR,WACA,mBACA,wBAGA,OAGA,WACA,aACM,EAAN,gCAAQ,OAAR,cACM,EAAN,YACA,gBAGM,EAAN,kBACA,QACA,QACA,eACA,YACA,8BAAQ,MAAR,4CACA,0BAAQ,OAAR,qBACA,2BAAQ,OAAR,iBACA,6BChEiX,I,YCO7WC,EAAY,eACd,EACAX,EACAU,GACA,EACA,KACA,KACA,MAIa,aAAAC,E","file":"js/chunk-2d0e5fe1.6c09647f.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"contenedor-histogram\"},[_c('h3',[_vm._v(\"Histogram\")]),_c('svg',{staticClass:\"svg-histogram\",attrs:{\"id\":\"svg_histogram\"}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"contenedor-histogram\">\n        <h3>Histogram</h3>\n        <svg class=\"svg-histogram\" id=\"svg_histogram\"></svg>\n    </div>\n</template>\n<script>\nimport * as d3 from \"d3\"    \nexport default {\n    Name: 'Histogram',\n    props: {\n        datos: Array,\n    },\n    mounted:function(){\n        // set the dimensions and margins of the graph\n        var margin = {top: 10, right: 30, bottom: 30, left: 40},\n            width = 460 - margin.left - margin.right,\n            height = 400 - margin.top - margin.bottom;\n\n        // append the svg object to the body of the page\n        var svg = d3.select(\"#svg_histogram\")\n        // .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .style(\"background-color\", \"#eee\")\n        .append(\"g\")\n            .attr(\"transform\",\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        // get the data\n        d3.csv(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/1_OneNum.csv\").then( data => {        \n        // X axis: scale and draw:\n        var x = d3.scaleLinear()\n            .domain([0, 1000])     // can use this instead of 1000 to have the max of data: d3.max(data, function(d) { return +d.price })\n            .range([0, width]);\n        svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(d3.axisBottom(x));\n\n        // set the parameters for the histogram\n        var histogram = d3.histogram()\n            .value(function(d) { return d.price; })   // I need to give the vector of value\n            .domain(x.domain())  // then the domain of the graphic\n            .thresholds(x.ticks(70)); // then the numbers of bins\n\n        // And apply this function to data to get the bins\n        var bins = histogram(data);\n\n        // Y axis: scale and draw:\n        var y = d3.scaleLinear()\n            .range([height, 0]);\n            y.domain([0, d3.max(bins, function(d) { return d.length; })]);   // d3.hist has to be called before the Y axis obviously\n        svg.append(\"g\")\n            .call(d3.axisLeft(y));\n\n        // append the bar rectangles to the svg element\n        svg.selectAll(\"rect\")\n            .data(bins)\n            .enter()\n            .append(\"rect\")\n                .attr(\"x\", 1)\n                .attr(\"transform\", function(d) { return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; })\n                .attr(\"width\", function(d) { return x(d.x1) - x(d.x0) -1 ; })\n                .attr(\"height\", function(d) { return height - y(d.length); })\n                .style(\"fill\", \"#69b3a2\")\n\n        });\n        // // set the dimensions and margin of the graph\n        // this.margin = {top:10, right:30,bottom:30, left:40},\n        //     this.width = 460 - this.margin.left - this.margin.right,\n        //     this.height = 400 - this.margin.top - this.margin.bottom;\n        // // append the svg object to the body of the page\n        // this.svg = d3.select(\"#svg_histogram\")\n        //         .attr(\"width\", this.width + this.margin.left + this.margin.right)\n        //         .attr(\"height\", this.height + this.margin.top + this.margin.bottom)\n        //     .append(\"g\")\n        //         .attr(\"transform\",\n        //                 \"translate(\"+ this.margin.left + \",\" + this.margin.top + \")\");\n        // // get the data\n        // d3.csv(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/1_OneNum.csv\").then(data => {\n        //     console.log(\"dat\",data);    \n        //     // X axis: scale and draw:\n        //     this.x = d3.scaleLinear()\n        //         .domain([0,1000])\n        //         .range([0,this.width]);\n        //     this.svg.append(\"g\")  \n        //         .attr(\"transform\", \"translate(0\"+this.height+\")\")\n        //         .call(d3.axisBottom(this.x));\n        //     // set the parameters fot the histogram\n        //     this.histogram = d3.histogram()\n        //         .value(d => d.price)\n        //         .domain(this.x.domain())  // then the domain of the graphic\n        //         .thresholds(this.x.ticks(70)); // then the numbers of bins\n        //     // And apply this functionto data to get the bins\n        //     this.bins = this.histogram(data);\n        //     // Y axis: scale and draw\n        //     this.y = d3.ScaleLinear()\n        //         .range([this.height, 0]);\n        //     this.y.domain([0, d3.max(this.bins, d => d.length)]);\n        //     this.svg.append(\"g\")\n        //         .call(d3.axisLeft(this.y));\n        //     // append the bar rectangles to the svg element\n        //     this.svg.selectAll(\"rect\")\n        //         .data(this.bins)\n        //         .enter()\n        //         .append(\"rect\")\n        //             .attr(\"x\", 1)\n        //             .attr(\"transform\", d => \"translate(\" + this.x(d.x0) + \",\" + this.y(d.length) + \")\")\n        //             .attr(\"width\", d => this.x(d.x1) - this.x(d.x0 - 1))\n        //             .attr(\"height\", d => this.height - this.y(d.length))\n        //             .style(\"fill\", \"#69b3a2\");\n        // });\n    },\n}\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Histogram.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Histogram.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Histogram.vue?vue&type=template&id=29bfac37&\"\nimport script from \"./Histogram.vue?vue&type=script&lang=js&\"\nexport * from \"./Histogram.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}